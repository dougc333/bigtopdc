-- Licensed to the Apache Software Foundation (ASF) under one or more
-- contributor license agreements.  See the NOTICE file distributed with
-- this work for additional information regarding copyright ownership.
-- The ASF licenses this file to You under the Apache License, Version 2.0
-- (the "License") you may not use this file except in compliance with
-- the License.  You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
set hive.auto.convert.join = true


explain
select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
from (
SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3 
FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY k1,v1,k2,v2,k3,v3
)a
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (< (. (TOK_TABLE_OR_COL src1) key) 10))) (TOK_TABREF (TOK_TABNAME src) src3) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)) (< (. (TOK_TABLE_OR_COL src3) key) 20)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) k1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) v1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) k2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) v2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) key) k3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value) v3)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k1)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v1)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k2)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v2)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k3)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v3))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION hash (. (TOK_TABLE_OR_COL a) k1) (. (TOK_TABLE_OR_COL a) v1) (. (TOK_TABLE_OR_COL a) k2) (. (TOK_TABLE_OR_COL a) v2) (. (TOK_TABLE_OR_COL a) k3) (. (TOK_TABLE_OR_COL a) v3)))))))

STAGE DEPENDENCIES:
  Stage-8 is a root stage , consists of Stage-9, Stage-10, Stage-1
  Stage-9 has a backup stage: Stage-1
  Stage-6 depends on stages: Stage-9
  Stage-2 depends on stages: Stage-1, Stage-6, Stage-7
  Stage-3 depends on stages: Stage-2
  Stage-10 has a backup stage: Stage-1
  Stage-7 depends on stages: Stage-10
  Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-8
    Conditional Operator

  Stage: Stage-9
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a:src1 
          Fetch Operator
            limit: -1
        a:src3 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                HashTable Sink Operator
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  Position of Big Table: 1
        a:src3 
          TableScan
            alias: src3
            HashTable Sink Operator
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              Position of Big Table: 1

  Stage: Stage-6
    Map Reduce
      Alias -> Map Operator Tree:
        a:src2 
          TableScan
            alias: src2
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Right Outer Join0 to 2
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
              Position of Big Table: 1
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
                      expr: _col4
                      type: string
                      expr: _col5
                      type: string
                      expr: _col8
                      type: string
                      expr: _col9
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
        hdfs://monster01.sf.cloudera.com:17020/tmp/hive-hudson/hive_2011-04-01_10-21-00_772_4864094195694055998/-mr-10002 
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
              sort order: ++++++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col2
                  type: string
                  expr: _col3
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Group By Operator
              aggregations:
                    expr: sum(hash(_col0,_col1,_col2,_col3,_col4,_col5))
              bucketGroup: false
              mode: hash
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-3
    Map Reduce
      Alias -> Map Operator Tree:
        hdfs://monster01.sf.cloudera.com:17020/tmp/hive-hudson/hive_2011-04-01_10-21-00_772_4864094195694055998/-mr-10003 
            Reduce Output Operator
              sort order: 
              tag: -1
              value expressions:
                    expr: _col0
                    type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          mode: mergepartial
          outputColumnNames: _col0
          Select Operator
            expressions:
                  expr: _col0
                  type: bigint
            outputColumnNames: _col0
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-10
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a:src1 
          Fetch Operator
            limit: -1
        a:src2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                HashTable Sink Operator
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  Position of Big Table: 2
        a:src2 
          TableScan
            alias: src2
            HashTable Sink Operator
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              Position of Big Table: 2

  Stage: Stage-7
    Map Reduce
      Alias -> Map Operator Tree:
        a:src3 
          TableScan
            alias: src3
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Right Outer Join0 to 2
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
              Position of Big Table: 2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
                      expr: _col4
                      type: string
                      expr: _col5
                      type: string
                      expr: _col8
                      type: string
                      expr: _col9
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 0
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        a:src2 
          TableScan
            alias: src2
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        a:src3 
          TableScan
            alias: src3
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 2
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Right Outer Join0 to 2
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0} {VALUE._col1}
            2 {VALUE._col0} {VALUE._col1}
          filter predicates:
            0 
            1 
            2 {(VALUE._col0 < 20)}
          handleSkewJoin: false
          outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
                  expr: _col8
                  type: string
                  expr: _col9
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1




select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
from (
SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3 
FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY k1,v1,k2,v2,k3,v3
)a
56157587016


explain
select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
from (
SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3  
FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY k1,v1,k2,v2,k3,v3
)a
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (AND (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (< (. (TOK_TABLE_OR_COL src1) key) 10)) (< (. (TOK_TABLE_OR_COL src2) key) 15))) (TOK_TABREF (TOK_TABNAME src) src3) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)) (< (. (TOK_TABLE_OR_COL src3) key) 20)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) k1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) v1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) k2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) v2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) key) k3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value) v3)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k1)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v1)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k2)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v2)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL k3)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL v3))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION hash (. (TOK_TABLE_OR_COL a) k1) (. (TOK_TABLE_OR_COL a) v1) (. (TOK_TABLE_OR_COL a) k2) (. (TOK_TABLE_OR_COL a) v2) (. (TOK_TABLE_OR_COL a) k3) (. (TOK_TABLE_OR_COL a) v3)))))))

STAGE DEPENDENCIES:
  Stage-8 is a root stage , consists of Stage-9, Stage-10, Stage-1
  Stage-9 has a backup stage: Stage-1
  Stage-6 depends on stages: Stage-9
  Stage-2 depends on stages: Stage-1, Stage-6, Stage-7
  Stage-3 depends on stages: Stage-2
  Stage-10 has a backup stage: Stage-1
  Stage-7 depends on stages: Stage-10
  Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-8
    Conditional Operator

  Stage: Stage-9
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a:src1 
          Fetch Operator
            limit: -1
        a:src3 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                HashTable Sink Operator
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  Position of Big Table: 1
        a:src3 
          TableScan
            alias: src3
            HashTable Sink Operator
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              Position of Big Table: 1

  Stage: Stage-6
    Map Reduce
      Alias -> Map Operator Tree:
        a:src2 
          TableScan
            alias: src2
            Filter Operator
              predicate:
                  expr: (key < 15)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 15)
                    type: boolean
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                       Right Outer Join0 to 2
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
                  Position of Big Table: 1
                  Select Operator
                    expressions:
                          expr: _col0
                          type: string
                          expr: _col1
                          type: string
                          expr: _col4
                          type: string
                          expr: _col5
                          type: string
                          expr: _col8
                          type: string
                          expr: _col9
                          type: string
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                    File Output Operator
                      compressed: false
                      GlobalTableId: 0
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
        hdfs://monster01.sf.cloudera.com:17020/tmp/hive-hudson/hive_2011-04-01_10-21-48_735_5280603062175628505/-mr-10002 
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
              sort order: ++++++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col2
                  type: string
                  expr: _col3
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Group By Operator
              aggregations:
                    expr: sum(hash(_col0,_col1,_col2,_col3,_col4,_col5))
              bucketGroup: false
              mode: hash
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-3
    Map Reduce
      Alias -> Map Operator Tree:
        hdfs://monster01.sf.cloudera.com:17020/tmp/hive-hudson/hive_2011-04-01_10-21-48_735_5280603062175628505/-mr-10003 
            Reduce Output Operator
              sort order: 
              tag: -1
              value expressions:
                    expr: _col0
                    type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          mode: mergepartial
          outputColumnNames: _col0
          Select Operator
            expressions:
                  expr: _col0
                  type: bigint
            outputColumnNames: _col0
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-10
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a:src1 
          Fetch Operator
            limit: -1
        a:src2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                HashTable Sink Operator
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  Position of Big Table: 2
        a:src2 
          TableScan
            alias: src2
            Filter Operator
              predicate:
                  expr: (key < 15)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 15)
                    type: boolean
                HashTable Sink Operator
                  condition expressions:
                    0 {key} {value}
                    1 {key} {value}
                    2 {key} {value}
                  filter predicates:
                    0 
                    1 
                    2 {(key < 20)}
                  handleSkewJoin: false
                  keys:
                    0 [Column[key]]
                    1 [Column[key]]
                    2 [Column[key]]
                  Position of Big Table: 2

  Stage: Stage-7
    Map Reduce
      Alias -> Map Operator Tree:
        a:src3 
          TableScan
            alias: src3
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Right Outer Join0 to 2
              condition expressions:
                0 {key} {value}
                1 {key} {value}
                2 {key} {value}
              filter predicates:
                0 
                1 
                2 {(key < 20)}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
                2 [Column[key]]
              outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
              Position of Big Table: 2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
                      expr: _col4
                      type: string
                      expr: _col5
                      type: string
                      expr: _col8
                      type: string
                      expr: _col9
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        a:src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 0
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        a:src2 
          TableScan
            alias: src2
            Filter Operator
              predicate:
                  expr: (key < 15)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 15)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 1
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        a:src3 
          TableScan
            alias: src3
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 2
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Right Outer Join0 to 2
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0} {VALUE._col1}
            2 {VALUE._col0} {VALUE._col1}
          filter predicates:
            0 
            1 
            2 {(VALUE._col0 < 20)}
          handleSkewJoin: false
          outputColumnNames: _col0, _col1, _col4, _col5, _col8, _col9
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
                  expr: _col8
                  type: string
                  expr: _col9
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1




select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
from (
SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3  
FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY k1,v1,k2,v2,k3,v3
)a
56157587016
